When would you want to use a remote repository rather than keeping all your work local?
Answer - when there is collaborative work, when there are multiple developers then it makes sense to regularly push the work to a remote repository

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
It may require many commits to have a feature , hence it makes sense to manually push the repository to make it public

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Fork is used for copying a repository already on the GIT server into another repository on GIT server
Clone is used for copying repository on the GIT server on the local machine
branches is an offshoot of an existing line of code for developing something new

What is the benefit of having a copy of the last known state of the remote stored locally?
Helps us to work offline, when we are done we can find the dif between sever and local and push the difference. Helps in merging etc

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

We would collaborate using emails. It would be easier when teams are co located and small. It would be harder if the team size is huge
Working on branches and automatic merging and review would be hard

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
If we work on a separate branch , it helps us to be in control of the code before release and it can be routed throug pull requeests for approval.
Pull requests merge could be cumbersome but it safe approach.
Directly working on master may be better if there is only few developers